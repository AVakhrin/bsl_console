{
   "catalogs":{
      "name":"Справочники",
      "name_en":"Catalogs",
      "items":{
         "Товары":{
            "properties":{
               "Код":"Код",
               "Наименование":"Наименование товара",
               "Цена":"Цена товара"
            }
         },
         "СтавкиНДС":{
            "properties":{
               "Код":"Код",
               "Наименование":"Наименование товара",
               "Ставка":"Значение ставки"
            }
         }
      },
      "methods":{
         "Выбрать":{
            "name":"Выбрать",
            "name_en":"Select",
            "description":"Формирует выборку элементов справочника по заданным условиям.",
            "returns":"СправочникВыборка",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Родитель?, Владелец?, Отбор?, Порядок?) : СправочникВыборка",
                  "Параметры":{
                     "Родитель":"СправочникСсылка, Отбор по родителю. Имеет смысл только для многоуровневых справочников. Если параметр не задан, то отбор по родителю не производится. Чтобы отобрать элементы верхнего уровня, нужно в качестве данного параметра указать пустую ссылку на элемент справочника.",
                     "Владелец":"СправочникСсылка, Отбор по владельцу. Имеет смысл только для подчиненных справочников. Если параметр не задан, то отбор по владельцу не производится.",
                     "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться только поля 'Код', 'Наименование' и реквизиты справочника, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или в значение 'Индексировать с доп. упорядоч.'. Важно! Структура может содержать только один элемент. Если параметр не указан, то отбор не используется.",
                     "Порядок":"Строка с именем реквизита справочника, определяющая упорядочивание элементов в выборке. Может быть указано 'Код', 'Наименование' или имя одного из реквизитов примитивного типа (Число, Строка, Дата, Булево), для которого установлен признак 'Индексирование' в значение 'Индексировать' или в 'Индексировать с дополнительным упорядочиванием' в конфигураторе. После имени реквизита через пробел может быть указано направление сортировки. Направление определяется: 'Убыв' ('Desc') - упорядочивать по убыванию; 'Возр' ('Asc') - упорядочивать по возрастанию. По умолчанию сортировка производится по возрастанию. Если параметр не указан, то порядок определяется основным представлением справочника. Значение по умолчанию: Пустая строка"
                  }
               }
            }
         },
         "ВыбратьИерархически":{
            "name":"ВыбратьИерархически",
            "name_en":"SelectHierarchically",
            "description":"Формирует иерархическую выборку элементов справочника по заданным условиям. При иерархической выборке для каждого элемента сначала выбираются элементы, для которых он является родителем, а затем уже выбираются элементы следующего уровня.",
            "returns":"СправочникВыборка",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Родитель?, Владелец?, Отбор?, Порядок?) : СправочникВыборка",
                  "Параметры":{
                     "Родитель":"СправочникСсылка, Отбор по родителю. Имеет смысл только для многоуровневых справочников. Если параметр не задан, то отбор по родителю не производится. Чтобы отобрать элементы верхнего уровня, нужно в качестве данного параметра указать пустую ссылку на элемент справочника.",
                     "Владелец":"СправочникСсылка, Отбор по владельцу. Имеет смысл только для подчиненных справочников. Если параметр не задан, то отбор по владельцу не производится.",
                     "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться только поля 'Код', 'Наименование' и реквизиты справочника, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или в значение 'Индексировать с доп. упорядоч.'. Важно! Структура может содержать только один элемент. Если параметр не указан, то отбор не используется.",
                     "Порядок":"Строка с именем реквизита справочника, определяющая упорядочивание элементов в выборке. Может быть указано 'Код', 'Наименование' или имя одного из реквизитов примитивного типа (Число, Строка, Дата, Булево), для которого установлен признак 'Индексирование' в значение 'Индексировать' или в 'Индексировать с дополнительным упорядочиванием' в конфигураторе. После имени реквизита через пробел может быть указано направление сортировки. Направление определяется: 'Убыв' ('Desc') - упорядочивать по убыванию; 'Возр' ('Asc') - упорядочивать по возрастанию. По умолчанию сортировка производится по возрастанию. Если параметр не указан, то порядок определяется основным представлением справочника. Значение по умолчанию: Пустая строка"
                  }
               }
            }
         },
         "НайтиПоКоду":{
            "name":"НайтиПоКоду",
            "name_en":"FindByCode",
            "description":"Осуществляет поиск элемента по его коду.",
            "returns":"СправочникСсылка.<Имя справочника>; Неопределено",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Код, ПоискПоПолномуКоду, Родитель, Владелец) : СправочникСсылка.<Имя справочника>; Неопределено",
                  "Параметры":{
                     "Код":"Число/Строка, Искомый код. Строка или число в зависимости от настроек справочника в конфигураторе. ",
                     "ПоискПоПолномуКоду":"Булево, Определяет режим поиска по полному коду. Истина - искомый код следует задавать в виде строки, состоящей из последовательности кодов по уровням справочника, разделенных символом '/'.Значение по умолчанию: Ложь",
                     "Родитель":"СправочникСсылка, Родитель, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем справочнике.",
                     "Владелец":"СправочникСсылка, Владелец, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем справочнике. "
                  }
               }
            }
         },
         "НайтиПоНаименованию":{
            "name":"НайтиПоНаименованию",
            "name_en":"FindByDescription",
            "description":"Осуществляет поиск элемента по его наименованию.",
            "returns":"СправочникСсылка.<Имя справочника>; Неопределено",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Наименование, ТочноеСоответствие?, Родитель?, Владелец?) : СправочникСсылка.<Имя справочника>; Неопределено",
                  "Параметры":{
                     "Наименование":"Строка, содержащая искомое наименование",
                     "ТочноеСоответствие":"Определяет режим поиска по полному соответствию. Поиск будет успешным, если строка поиска: в случае значения параметра Ложь - будет соответствовать левой части наименования; в случае значения параметра Истина - будет полностью совпадать с наименованием (за исключением 'хвостовых'' пробелов в наименовании).",
                     "Родитель":"СправочникСсылка, Родитель, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем справочнике.",
                     "Владелец":"СправочникСсылка, Владелец, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем справочнике. "
                  }
               }
            }
         },
         "НайтиПоРеквизиту":{
            "name":"НайтиПоРеквизиту",
            "name_en":"FindByAttribute",
            "description":"Осуществляет поиск элемента по значению реквизита.",
            "returns":"СправочникСсылка.<Имя справочника>; Неопределено",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(ИмяРеквизита, ЗначениеРеквизита, Родитель?, Владелец?) : СправочникСсылка.<Имя справочника>; Неопределено",
                  "Параметры":{
                     "ИмяРеквизита":"Имя реквизита, как он задан в конфигураторе, по значению которого осуществляется поиск. Тип значения произвольный, кроме ХранилищеЗначения и строк произвольной длины.",
                     "ЗначениеРеквизита":"Значение реквизита, по которому должен выполняться поиск. ",
                     "Родитель":"СправочникСсылка, Родитель, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем справочнике.",
                     "Владелец":"СправочникСсылка, Владелец, в пределах которого нужно выполнять поиск. Если не указан, то поиск будет проводиться во всем справочнике. "
                  }
               }
            }
         },
         "ПолучитьДанныеВыбора":{
            "name":"ПолучитьДанныеВыбора",
            "name_en":"GetChoiceData",
            "description":"Формирует список значений данных выбора при вводе по строке, автоподборе текста и быстром выборе.",
            "returns":"СписокЗначений",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Параметры) : СписокЗначений",
                  "Параметры":{
                     "Параметры":"Содержит параметры для формирования списка значений: Структура, в которой обязательно должны содержаться следующие ключи:  Отбор (Filter) - отбор, используемый для поиска данных, тип Структура; значения элементов отбора могут иметь тип Массив или иной тип, не являющийся коллекцией; для типа Массив сравнение выполняется с видом сравнения ВСписке, иначе вид сравнения Равно;  СтрокаПоиска (SearchString) - содержит строку, используемую при поиске данных; для быстрого выбора содержит значение Неопределено;  ВыборГруппИЭлементов (ChoiceFoldersAndItems) - указывается использование групп и элементов (только для иерархических данных); тип ИспользованиеГруппИЭлементов."
                  }
               }
            }
         },
         "ПолучитьИмяПредопределенного":{
            "name":"ПолучитьИмяПредопределенного",
            "name_en":"GetPredefinedItemName",
            "description":"Получает имя предопределенного элемента. Если данный элемент не является предопределенным, то возвращается пустая строка.",
            "returns":"Строка",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Ссылка) : Строка",
                  "Параметры":{
                     "Ссылка":"Ссылка на элемент, имя которого требуется получить. "
                  }
               }
            }
         },
         "ПолучитьМакет":{
            "name":"ПолучитьМакет",
            "name_en":"GetTemplate",
            "description":"Получает макет справочника.",
            "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Макет) : Объект",
                  "Параметры":{
                     "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                  }
               }
            }
         },
         "ПолучитьСсылку":{
            "name":"ПолучитьСсылку",
            "name_en":"GetRef",
            "description":"Формирует ссылку из значения типа УникальныйИдентификатор. Данный уникальный идентификатор может быть в дальнейшем получен из ссылки методом УникальныйИдентификатор.",
            "returns":"СправочникСсылка",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(УникальныйИдентификатор) : СправочникСсылка",
                  "Параметры":{
                     "УникальныйИдентификатор":"Уникальный идентификатор, из которого будет формироваться ссылка."
                  }
               }
            }
         },
         "ПолучитьФорму":{
            "name":"ПолучитьФорму",
            "name_en":"GetForm",
            "description":"Получает форму справочника. Если получаемая форма - форма для редактирования элемента или группы справочника, то будет получена форма нового элемента или группы.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "ПолучитьФормуВыбора":{
            "name":"ПолучитьФормуВыбора",
            "name_en":"GetChoiceForm",
            "description":"Получает форму списка для выбора элементов справочника.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "ПолучитьФормуВыбораГруппы":{
            "name":"ПолучитьФормуВыбораГруппы",
            "name_en":"GetChoiceForm",
            "description":"Получает форму списка для выбора группы справочника.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "ПолучитьФормуНовогоЭлемента":{
            "name":"ПолучитьФормуНовогоЭлемента",
            "name_en":"GetNewItemForm",
            "description":"Получает форму нового элемента.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "ПолучитьФормуНовойГруппы":{
            "name":"ПолучитьФормуНовойГруппы",
            "name_en":"GetNewFolderForm",
            "description":"Получает форму новой группы.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "ПолучитьФормуСписка":{
            "name":"ПолучитьФормуСписка",
            "name_en":"GetListForm",
            "description":"Получает форму списка элементов справочника.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "ПустаяСсылка":{
            "name":"ПустаяСсылка",
            "name_en":"EmptyRef",
            "description":"Получает пустое значение ссылки на справочник данного вида.",
            "returns":"СправочникСсылка"
         },
         "СоздатьГруппу":{
            "name":"СоздатьГруппу",
            "name_en":"CreateFolder",
            "description":"Создает новую группу справочника.",
            "returns":"СправочникОбъект"
         },
         "СоздатьЭлемент":{
            "name":"СоздатьЭлемент",
            "name_en":"CreateItem",
            "description":"Создает новый элемент справочника.",
            "returns":"СправочникОбъект"
         }
      },
      "objMethods":{
         "Записать":{
            "name":"Записать",
            "name_en":"Write",
            "description":"Записывает элемент справочника в базу данных."
         },
         "ПолучитьОбъект":{
            "name":"ПолучитьОбъект",
            "name_en":"GetObject",
            "description":"Получает по ссылке объект для чтения, изменения, добавления и удаления документа.",
            "returns":"СправочникОбъект/Неопределено, Неопределено - объекта в базе нет (например, при обмене данными или после непосредственного удаления объекта, на который есть ссылки)."
         },
         "Пустая":{
            "name":"Пустая",
            "name_en":"GetObject",
            "description":"Определяет, является ли ссылка пустой или нет.",
            "returns":"Булево, Истина - ссылка не указывает ни на какой объект (пустая ссылка); Ложь - в противном случае."
         },
         "Скопировать":{
            "name":"Скопировать",
            "name_en":"Copy",
            "description":"Создает новый элемент справочника копированием существующего.",
            "returns":"СправочникОбъект"
         },
         "УникальныйИдентификатор":{
            "name":"УникальныйИдентификатор",
            "name_en":"UUID",
            "description":"Получает уникальный идентификатор ссылки. Ссылка может быть получена из уникального идентификатора с помощью метода менеджера ПолучитьСсылку.",
            "returns":"УникальныйИдентификатор"
         }
      }
   },
   "documents":{
      "name":"Документы",
      "name_en":"Documents",
      "items":{
         "ПриходнаяНакладная":{
            "properties":{
               "Номер":"Номер документа",
               "Дата":"Дата документа",
               "СуммаДокумента":"Сумма (руб.коп.)"
            }
         },
         "АвансовыйОтчет":{
            "properties":{
               "Номер":"Номер документа",
               "Дата":"Дата документа",
               "ПодотчетноеЛицо":"Подотчетное лицо"
            }
         }
      },
      "methods":{
         "Выбрать":{
            "name":"Выбрать",
            "name_en":"Select",
            "description":"Формирует выборку документов за определенный период. Получаемая выборка может быть упорядочена по реквизитам документа.",
            "returns":"ДокументВыборка",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(ДатаНачала?, ДатаОкончания?, Отбор?, Порядок?) : ДокументВыборка",
                  "Параметры":{
                     "ДатаНачала":"Дата, Дата и время начала периода выборки документов. Если параметр не указан, то выбираются все документы, начиная с самого первого документа в базе данных.",
                     "ДатаОкончания":"Дата, Дата окончания периода выбираемых документов. Если параметр не указан, то выбираются все документы, заканчивая самым последним документом в базе данных.",
                     "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться только поля 'Код', 'Наименование' и реквизиты справочника, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или в значение 'Индексировать с доп. упорядоч.'. Важно! Структура может содержать только один элемент. Если параметр не указан, то отбор не используется.",
                     "Порядок":"Строка с именем реквизита справочника, определяющая упорядочивание элементов в выборке. Может быть указано 'Код', 'Наименование' или имя одного из реквизитов примитивного типа (Число, Строка, Дата, Булево), для которого установлен признак 'Индексирование' в значение 'Индексировать' или в 'Индексировать с дополнительным упорядочиванием' в конфигураторе. После имени реквизита через пробел может быть указано направление сортировки. Направление определяется: 'Убыв' ('Desc') - упорядочивать по убыванию; 'Возр' ('Asc') - упорядочивать по возрастанию. По умолчанию сортировка производится по возрастанию. Если параметр не указан, то порядок определяется основным представлением справочника. Значение по умолчанию: Пустая строка"
                  }
               }
            }
         },
         "НайтиПоНомеру":{
            "name":"НайтиПоНомеру",
            "name_en":"FindByNumber",
            "description":"Осуществляет поиск документа по номеру.",
            "returns":"ДокументСсылка.<Имя документа>; Неопределено.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(НомерДокумента, ДатаИнтервала) : ДокументСсылка.<Имя справочника>; Неопределено",
                  "Параметры":{
                     "НомерДокумента":"Число/Строка, Номер искомого документа. Тип передаваемого значения зависит от установки в конфигураторе представления номера документа.",
                     "Дата":"Дата, Дата из интервала, в котором проводится поиск по номеру. Сам интервал определяется как период уникальности номеров документа, в который входит указанная дата. Например, если номера документов уникальны в пределах месяца и задана дата 10 декабря 2001 года, то поиск будет проводиться в интервале с 01 по 31 декабря 2001 года."
                  }
               }
            }
         },
         "НайтиПоРеквизиту":{
            "name":"НайтиПоРеквизиту",
            "name_en":"FindByAttribute",
            "description":"Осуществляет поиск документа по реквизиту.",
            "returns":"ДокументСсылка",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(ИмяРеквизита, ЗначениеРеквизита) : ДокументСсылка",
                  "Параметры":{
                     "ИмяРеквизита":"Строка, Имя реквизита, как он задан в конфигураторе, по значению которого осуществляется поиск. Тип значения произвольный, кроме ХранилищеЗначения и строк произвольной длины.",
                     "ЗначениеРеквизита":"Значение реквизита, по которому должен выполняться поиск."
                  }
               }
            }
         },
         "ПолучитьДанныеВыбора":{
            "name":"ПолучитьДанныеВыбора",
            "name_en":"GetChoiceData",
            "description":"Формирует список значений данных выбора при вводе по строке, автоподборе текста и быстром выборе.",
            "returns":"СписокЗначений",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Параметры) : СписокЗначений",
                  "Параметры":{
                     "Параметры":"Содержит параметры для формирования списка значений: Структура, в которой обязательно должны содержаться следующие ключи:  Отбор (Filter) - отбор, используемый для поиска данных, тип Структура; значения элементов отбора могут иметь тип Массив или иной тип, не являющийся коллекцией; для типа Массив сравнение выполняется с видом сравнения ВСписке, иначе вид сравнения Равно;  СтрокаПоиска (SearchString) - содержит строку, используемую при поиске данных; для быстрого выбора содержит значение Неопределено;  ВыборГруппИЭлементов (ChoiceFoldersAndItems) - указывается использование групп и элементов (только для иерархических данных); тип ИспользованиеГруппИЭлементов."
                  }
               }
            }
         },
         "ПолучитьМакет":{
            "name":"ПолучитьМакет",
            "name_en":"GetTemplate",
            "description":"Получает макет документа.",
            "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Макет) : Объект",
                  "Параметры":{
                     "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                  }
               }
            }
         },
         "ПолучитьСсылку":{
            "name":"ПолучитьСсылку",
            "name_en":"GetRef",
            "description":"Формирует ссылку из значения типа УникальныйИдентификатор. Данный уникальный идентификатор может быть в дальнейшем получен из ссылки методом УникальныйИдентификатор.",
            "returns":"ДокументСсылка",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(УникальныйИдентификатор) : ДокументСсылка",
                  "Параметры":{
                     "УникальныйИдентификатор":"Уникальный идентификатор, из которого будет формироваться ссылка."
                  }
               }
            }
         },
         "ПолучитьФорму":{
            "name":"ПолучитьФорму",
            "name_en":"GetForm",
            "description":"Получает форму документа. Если получаемая форма - форма для редактирования документа, то будет получена форма нового документа.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "ПолучитьФормуВыбора":{
            "name":"ПолучитьФормуВыбора",
            "name_en":"GetChoiceForm",
            "description":"Получает форму списка для выбора элементов справочника.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "ПолучитьФормуНовогоДокумента":{
            "name":"ПолучитьФормуНовогоДокумента",
            "name_en":"GetNewDocumentForm",
            "description":"Получает форму нового документа.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "ПолучитьФормуСписка":{
            "name":"ПолучитьФормуСписка",
            "name_en":"GetListForm",
            "description":"Получает форму списка документов.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "ПустаяСсылка":{
            "name":"ПустаяСсылка",
            "name_en":"EmptyRef",
            "description":"Получает пустое значение ссылки на документ данного вида.",
            "returns":"ДокументСсылка"
         },
         "СоздатьДокумент":{
            "name":"СоздатьДокумент",
            "name_en":"CreateDocument",
            "description":"Создает новый документ.",
            "returns":"ДокументОбъект"
         }
      },
      "objMethods":{
         "Записать":{
            "name":"Записать",
            "name_en":"Write",
            "description":"Записывает документ в базу данных.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(РежимЗаписи?, РежимПроведения?)",
                  "Параметры":{
                     "РежимЗаписи":"РежимЗаписиДокумента, Позволяет выбрать один из возможных режимов записи.",
                     "РежимПроведения":"РежимПроведенияДокумента, Позволяет выбрать один из возможных режимов проведения."
                  }
               }
            }
         },         
         "ПолучитьОбъект":{
            "name":"ПолучитьОбъект",
            "name_en":"GetObject",
            "description":"Получает по ссылке объект для чтения, изменения, добавления и удаления документа.",
            "returns":"ДокументОбъект/Неопределено, Неопределено - объекта в базе нет (например, при обмене данными или после непосредственного удаления объекта, на который есть ссылки)."
         },
         "Пустая":{
            "name":"Пустая",
            "name_en":"GetObject",
            "description":"Определяет, является ли ссылка пустой или нет.",
            "returns":"Булево, Истина - ссылка не указывает ни на какой объект (пустая ссылка); Ложь - в противном случае."
         },
         "Скопировать":{
            "name":"Скопировать",
            "name_en":"Copy",
            "description":"Создает новый документ копированием существующего.",
            "returns":"ДокументОбъект"
         },
         "УникальныйИдентификатор":{
            "name":"УникальныйИдентификатор",
            "name_en":"UUID",
            "description":"Получает уникальный идентификатор ссылки. Ссылка может быть получена из уникального идентификатора с помощью метода менеджера ПолучитьСсылку.",
            "returns":"УникальныйИдентификатор"
         }
      }
   },
   "infoRegs":{
      "name":"РегистрыСведений",
      "name_en":"InformationRegisters",
      "items":{
         "ТестовыйЭлемент":{
            "properties":{
               "Реквизит1":"Реквизит №1",
               "Реквизит2":"Реквизит №2",
               "Реквизит3":"Реквизит №3"
            }
         }
      },
      "methods":{
         "Выбрать":{
            "name":"Выбрать",
            "name_en":"Select",
            "description":"Формирует выборку записей регистра сведений.",
            "returns":"РегистрСведенийВыборка",
            "signature":{
               "ДляПериодическогоРегистра":{
                  "СтрокаПараметров":"(НачалоИнтервала?, КонецИнтервала?, Отбор?, Порядок?) : РегистрСведенийВыборка",
                  "Параметры":{
                     "НачалоИнтервала":"Дата/МоментВремени/Граница, Начало интервала, за который будут выдаваться записи периодического регистра сведений. Если не указан, то будут выдаваться записи с самого ранней включительно. Может задаваться значениями типа Дата, МоментВремени или Граница.",
                     "КонецИнтервала":"Дата/МоментВремени/Граница, Конец интервала, за который будут выдаваться записи периодического регистра сведений. Если не указан, то будут выдаваться записи до самой поздней включительно. Может задаваться значениями типа Дата, МоментВремени или Граница.",
                     "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться измерения или реквизиты, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или установлен признак 'Ведущее'. Вид сравнения может быть только Равно. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется. Важно! Структура может содержать только один элемент.",
                     "Порядок":"Строка, Может содержать слово 'Возр' или 'Убыв', тогда стандартный порядок будет использоваться с указанным направлением.  Может содержать имя поля (реквизита или измерения, для которых указано индексирование) и слово 'Возр' или 'Убыв', тогда упорядочивание будет производится по указанному полю в указанном порядке."
                  }
               },
               "ДляНепериодическогоРегистра":{
                  "СтрокаПараметров":"(Отбор?, Порядок?) : РегистрСведенийВыборка",
                  "Параметры":{
                     "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться измерения или реквизиты, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или установлен признак 'Ведущее'. Вид сравнения может быть только Равно. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется. Важно! Структура может содержать только один элемент.",
                     "Порядок":"Строка, Может содержать слово 'Возр' или 'Убыв', тогда стандартный порядок будет использоваться с указанным направлением.  Может содержать имя поля (реквизита или измерения, для которых указано индексирование) и слово 'Возр' или 'Убыв', тогда упорядочивание будет производится по указанному полю в указанном порядке."
                  }
               }
            }
         },
         "ВыбратьПоРегистратору":{
            "name":"ВыбратьПоРегистратору",
            "name_en":"SelectByRecorder",
            "description":"Формирует выборку по регистратору записей регистра сведений. Применяется для регистров сведений, для которых в конфигураторе установлен режим записи 'Подчинение регистратору'.",
            "returns":"РегистрСведенийВыборка",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Регистратор) : РегистрСведенийВыборка",
                  "Параметры":{
                     "Регистратор":"ДокументСсылка, Ссылка на документ, являющийся регистратором для записей регистра"
                  }
               }
            }
         },
         "Получить":{
            "name":"Получить",
            "name_en":"Get",
            "description":"Получает ресурсы регистра сведений по указанным ключевым полям.",
            "returns":"Структура",
            "signature":{
               "ДляПериодическогоРегистра":{
                  "СтрокаПараметров":"(Период, Отбор) : Структура",
                  "Параметры":{
                     "Период":"Дата/МоментВремени, Определяет момент времени, на который необходимо получить значения ресурсов. Если указанный момент времени не совпадает с периодом ни одной записи регистра, то будет возвращена структура, содержащая пустые значения.",
                     "Отбор":"Структура, содержащая отбор по измерениям регистра. В переданной структуре должны содержаться те измерения, по которым должны быть отфильтрованы записи. В элементе структуры задается имя и значение отбора. Должны указываться значения для всех измерений. Параметр обязателен для регистров, имеющих измерения. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Неиспользуемым в сеансе разделителям регистра в структуре должен соответствовать элемент с указанным значением отбора, так же, как для всех измерений, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется."
                  }
               },
               "ДляНепериодическогоРегистра":{
                  "СтрокаПараметров":"(Отбор) : Структура",
                  "Параметры":{                     
                     "Отбор":"Структура, содержащая отбор по измерениям регистра. В переданной структуре должны содержаться те измерения, по которым должны быть отфильтрованы записи. В элементе структуры задается имя и значение отбора. Должны указываться значения для всех измерений. Параметр обязателен для регистров, имеющих измерения. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Неиспользуемым в сеансе разделителям регистра в структуре должен соответствовать элемент с указанным значением отбора, так же, как для всех измерений, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется."
                  }
               }
            }
         },
         "ПолучитьМакет":{
            "name":"ПолучитьМакет",
            "name_en":"GetTemplate",
            "description":"Получает макет регистра сведений.",
            "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Макет) : Объект",
                  "Параметры":{
                     "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                  }
               }
            }
         },
         "ПолучитьПервое":{
            "name":"ПолучитьПервое",
            "name_en":"GetFirst",
            "description":"Получает значения ресурсов наиболее ранней записи регистра, соответствующей указанным периоду и значениям измерений регистра. Поиск по периоду осуществляется 'включительно', т.е. если существует запись с таким же значением одноименного свойства, то она и будет найдена.",
            "returns":"Структура",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(НачалоПериода, Отбор) : Структура",
                  "Параметры":{
                     "НачалоПериода":"Дата/МоментВремени/Граница, Определяет момент времени, начиная с которого необходимо получить значения ресурсов. Может задаваться значениями типа Дата, МоментВремени или Граница. Если параметр не указан, то будут возвращены значения ресурсов самой первой записи регистра.",
                     "Отбор":"Структура, содержащая отбор по измерениям регистра. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется."
                  }
               }               
            }
         },
         "ПолучитьПоследнее":{
            "name":"ПолучитьПоследнее",
            "name_en":"GetLast",
            "description":"Получает значения ресурсов наиболее поздней записи регистра, соответствующей указанным периоду и значениям измерений регистра.",
            "returns":"Структура",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(КонецПериода, Отбор) : Структура",
                  "Параметры":{
                     "КонецПериода":"Дата/МоментВремени/Граница, Определяет момент времени, по который необходимо получить значения ресурсов. Может задаваться значениями типа Дата, МоментВремени или Граница. Если параметр не указан, то будут возвращены значения ресурсов самой последней записи регистра.",
                     "Отбор":"Структура, содержащая отбор по измерениям регистра. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется."
                  }
               }               
            }
         },
         "ПолучитьФорму":{
            "name":"ПолучитьФорму",
            "name_en":"GetForm",
            "description":"Получает форму регистра сведений.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },         
         "ПолучитьФормуРедактированияЗаписи":{
            "name":"ПолучитьФормуРедактированияЗаписи",
            "name_en":"GetRecordEditingForm",
            "description":"Получает форму редактирования записи регистра сведений.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "ПолучитьФормуСписка":{
            "name":"ПолучитьФормуСписка",
            "name_en":"GetListForm",
            "description":"Получает форму списка регистра сведений.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "ПустойКлюч":{
            "name":"ПустойКлюч",
            "name_en":"EmptyKey",
            "description":"Получает пустое значение ключа записи регистра сведений.",
            "returns":"РегистрСведенийКлючЗаписи"            
         },
         "СоздатьКлючЗаписи":{
            "name":"СоздатьКлючЗаписи",
            "name_en":"CreateRecordKey",
            "description":"Создает ключ записи по переданной структуре.",
            "returns":"РегистрСведенийКлючЗаписи",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(ЗначенияКлюча) : РегистрСведенийКлючЗаписи",
                  "Параметры":{
                     "Форма":"Структура, содержащая значения для заполнения свойств ключа записи. Имена элементов структуры должны соответствовать именам ключевых полей."
                  }
               }
            }
         },
         "СоздатьМенеджерЗаписи":{
            "name":"СоздатьМенеджерЗаписи",
            "name_en":"CreateRecordManager",
            "description":"Создает объект для управления записью регистра сведений.",
            "returns":"РегистрСведенийМенеджерЗаписи"            
         },
         "СоздатьНаборЗаписей":{
            "name":"СоздатьНаборЗаписей",
            "name_en":"CreateRecordSet",
            "description":"Создает набор записей регистра сведений. Набор записей создается пустым.",
            "returns":"РегистрСведенийНаборЗаписей"            
         },
         "СрезПервых":{
            "name":"СрезПервых",
            "name_en":"SliceFirst",
            "description":"Получает наиболее ранние записи регистра, соответствующие установленным в параметрах метода значениям ключевых полей. Записи подбираются для каждого сочетания из всех имеющихся значений измерений регистра.",
            "returns":"ТаблицаЗначений",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(НачалоПериода, Отбор) : ТаблицаЗначений",
                  "Параметры":{
                     "Период":"Дата/МоментВремени/Граница, Определяет момент времени, начиная с которого необходимо выбрать записи. Если параметр не указан, то будут получены записи без ограничения по времени.",
                     "Отбор":"Структура, содержащая отбор по измерениям и реквизитам регистра. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется. "
                  }
               }               
            }
         },
         "СрезПоследних":{
            "name":"СрезПоследних",
            "name_en":"SliceLast",
            "description":"Получает наиболее поздние записи регистра, соответствующие установленным в параметрах метода значениям ключевых полей. Записи подбираются для каждого сочетания из всех имеющихся значений измерений регистра.",
            "returns":"ТаблицаЗначений",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(КонецПериода, Отбор) : ТаблицаЗначений",
                  "Параметры":{
                     "КонецПериода":"Дата/МоментВремени/Граница, Определяет момент времени, заканчивая которым необходимо выбрать записи. Если параметр не указан, то будут возвращены значения ресурсов самой последней записи регистра.",
                     "Отбор":"Структура, содержащая отбор по измерениям регистра. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется."
                  }
               }               
            }
         }
      },      
      "objMethods":{
         "Записать":{
            "name":"Записать",
            "name_en":"Write",
            "description":"Записывает в базу данных запись регистра сведений с текущими значениями свойств. Если запись регистра сведений была предварительно считана из базы данных, то при выполнении метода сначала считанная запись удаляется, а затем производится запись измененной записи. С помощью параметра <Замещать> регулируется, будет ли метод замещать запись, если в момент выполнения метода существует другая (исключая считанную) запись с такими же значениями измерений регистра и с таким же периодом для периодических регистров.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Замещать?)",
                  "Параметры":{
                     "Замещать":"Булево, Определяет режим замещения существующей записи с тем же набором значений измерений регистра и с тем же периодом (для периодических регистров). Истина - если запись регистра сведений с таким набором существует, то выполняется замещение; Ложь - запись будет дописана к уже существующим в информационной базе записям."                     
                  }
               }               
            }
         },
         "Заполнить":{
            "name":"Заполнить",
            "name_en":"Fill",
            "description":"Вызывает заполнение записи данными из какого-либо другого объекта. При этом в модуле набора записей вызывается событие ОбработкаЗаполнения, причем набор в данном случае содержит единственную запись. В обработке может размещаться алгоритм, заполняющий эту запись из переданного значения. Для заполнения может использоваться значение любого типа. Для этого типа в процедуре-обработчике события ОбработкаЗаполнения должен быть описан алгоритм заполнения.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(ДанныеЗаполнения?)",
                  "Параметры":{
                     "ДанныеЗаполнения":"Произвольный, Значение, на основании которого выполняется заполнение. "
                  }
               }               
            }
         },
         "Прочитать":{
            "name":"Прочитать",
            "name_en":"Read",
            "description":"Считывает запись регистра сведений по установленным значениям ключевых полей, включая разделители с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. При этом, если указать значение разделителя, отличное от используемого в сеансе или не указать не испрользуемое в сеансе, Выбран вернет Ложь."            
         },
         "Удалить":{
            "name":"Удалить",
            "name_en":"Delete",
            "description":"Удаляет запись из набора записей с установленными значениями ключевых полей."            
         }
      }
   },
   "accumRegs":{
      "name":"РегистрыНакопления",
      "name_en":"AccumulationRegisters",
      "items":{
         "ТестовыйЭлемент":{
            "properties":{
               "Реквизит1":"Реквизит №1",
               "Реквизит2":"Реквизит №2",
               "Реквизит3":"Реквизит №3"
            }
         }
      },
      "methods":{
         "АгрегатыЗаполнены":{
            "name":"АгрегатыЗаполнены",
            "name_en":"AggregatesIsFilled",
            "description":"Проверяет запонение агрегатов.",
            "returns":"Булево, Истина - процесс заполнения агрегатов завершен (заполнены все агрегаты помеченные к использованию)."
         },
         "Выбрать":{
            "name":"Выбрать",
            "name_en":"Select",
            "description":"Формирует выборку записей регистра накопления.",
            "returns":"РегистрНакопленияВыборка",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(НачалоИнтервала?, КонецИнтервала?, Отбор?, Порядок?) : РегистрНакопленияВыборка",
                  "Параметры":{
                     "НачалоИнтервала":"Дата/МоментВремени/Граница, Начало интервала, за который будут выдаваться записи регистра накопления. Если не указан, то будут выдаваться записи с самого ранней включительно. Может задаваться значениями типа Дата, МоментВремени или Граница.",
                     "КонецИнтервала":"Дата/МоментВремени/Граница, Конец интервала, за который будут выдаваться записи периодического регистра накопления. Если не указан, то будут выдаваться записи до самой поздней включительно. Может задаваться значениями типа Дата, МоментВремени или Граница.",
                     "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться измерения или реквизиты, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или установлен признак 'Ведущее'. Вид сравнения может быть только Равно. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется. Важно! Структура может содержать только один элемент.",
                     "Порядок":"Строка, Может содержать слово 'Возр' или 'Убыв', тогда стандартный порядок будет использоваться с указанным направлением.  Может содержать имя поля (реквизита или измерения, для которых указано индексирование) и слово 'Возр' или 'Убыв', тогда упорядочивание будет производится по указанному полю в указанном порядке."
                  }
               }
            }
         },
         "ВыбратьПоРегистратору":{
            "name":"ВыбратьПоРегистратору",
            "name_en":"SelectByRecorder",
            "description":"Формирует выборку по регистратору записей регистра накопления.",
            "returns":"РегистрНакопленияВыборка",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Регистратор) : РегистрНакопленияВыборка",
                  "Параметры":{
                     "Регистратор":"ДокументСсылка, Ссылка на документ, являющийся регистратором для записей"                     
                  }
               }
            }
         },
         "ОбновитьАгрегаты":{
            "name":"ОбновитьАгрегаты",
            "name_en":"UpdateAggregates",
            "description":"Отражает в агрегатах движения, происшедшие в период от даты прошлого переноса движений, или пересчета агрегатов.",
            "returns":"Булево, Истина - заполнение происходит порциями; иначе – полностью заполняются все агрегаты, помеченные к использованию."
         },
         "Обороты":{
            "name":"Обороты",
            "name_en":"Turnovers",
            "description":"Получает обороты регистра накопления за заданный период времени. Есть возможность фильтрации по значениям измерений. Возвращает таблицу значений, содержащую колонки с измерениями, указанными в параметре Измерения, и по две колонки на каждый ресурс, указанный в параметре <Ресурсы>. Названия колонок для ресурсов формируются следующим образом: для регистров остатков: '<Имя ресурса>Приход' и '<Имя ресурса>Расход' или '<ИдентификаторРесурса>Receipt' и '<ИдентификаторРесурса>Expense'; для регистров оборотов: '<Имя ресурса>'.",
            "returns":"ТаблицаЗначений",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(НачалоПериода?, КонецПериода?, Отбор?, Измерения?, Ресурсы?) : ТаблицаЗначений",
                  "Параметры":{
                     "НачалоПериода":"Дата/МоментВремени/Граница, Момент времени, начиная с которого необходимо получить обороты. Если параметр не указан, то обороты будут получены начиная с момента ведения базы данных. Если в качестве параметра передана Дата или МоментВремени, то обороты за указанную дату (момент времени) будут включены в результирующую таблицу значений.",
                     "КонецПериода":"Дата/МоментВремени/Граница, Момент времени, определяющий конец периода за который необходимо получить обороты. Если параметр не указан, то обороты будут получены до самого позднего движения регистра. Если в качестве параметра передана Дата или МоментВремени, то обороты за указанную дату (момент времени) будут включены в результирующую таблицу значений.",
                     "Отбор":"Структура, содержащая набор значений измерений регистра, по которым надо отбирать обороты. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Если параметр не указан, то отбор не используется.",
                     "Измерения":"Строка, Список измерений, для которых надо разворачивать обороты. Строка, содержащая имена измерений, разделенные запятыми. Если параметр не указан или указана пустая строка, то обороты будут сформированы по всем измерениям.",
                     "Ресурсы":"Строка, Список ресурсов, для которых надо получить обороты. Строка, содержащая имена ресурсов, разделенные запятыми. Если параметр не указан или указана пустая строка, то обороты будут сформированы по всем ресурсам."
                  }
               }              
            }
         },
         "ОпределитьОптимальныеАгрегаты":{
            "name":"ОпределитьОптимальныеАгрегаты",
            "name_en":"DetermineOptimalAggregates",
            "description":"Выполняет построение оптимальных агрегатов.",
            "returns":"ИнформацияОбАгрегатах",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(МаксимальныйОтносительныйРазмер?) : ИнформацияОбАгрегатах",
                  "Параметры":{
                     "МаксимальныйОтносительныйРазмер":"Число, Максимальная сумма размеров агрегатов в % от таблицы движений. Если не указан или равен нулю, то не накладывается ограничений на размер агрегатов."
                  }
               }              
            }
         },
         "Остатки":{
            "name":"Остатки",
            "name_en":"Balance",
            "description":"Получает остатки регистра накопления на заданный момент времени. Есть возможность фильтрации по значениям измерений, а также получения остатков в разрезе других измерений. Возвращает таблицу значений, содержащую колонки с измерениями, указанными в параметре Измерения, и колонки с ресурсами, указанными в параметре <Ресурсы>.",
            "returns":"ТаблицаЗначений",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(МоментВремени?, Отбор?, Измерения?, Ресурсы?) : ТаблицаЗначений",
                  "Параметры":{
                     "МоментВремени":"Дата/МоментВремени/Граница, Момент времени, на который необходимо получить остатки. Если параметр не указан, то будут получены текущие остатки (на максимальную дату движений регистра). Если в качестве параметра передана Дата, то остатки будут получены на начало дня, если МоментВремени - то в остатках не будут учтены движения регистра, произошедшие в тот же момент времени.",
                     "Отбор":"Структура, содержащая набор значений для измерений регистра. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Если параметр не указан, то отбор не используется",
                     "Измерения":"Список измерений, для которых надо получить остатки. Строка, содержащая имена измерений, разделенные запятыми. Если параметр не указан или указана пустая строка, то остатки будут сформированы по всем измерениям.",
                     "Ресурсы":"Список ресурсов, для которых надо получить остатки. Строка, содержащая имена ресурсов, разделенные запятыми. Если параметр не указан или указана пустая строка, то остатки будут сформированы по всем ресурсам."
                  }
               }              
            }
         },
         "ОчиститьАгрегаты":{
            "name":"ОчиститьАгрегаты",
            "name_en":"ClearAggregates",
            "description":"Очищает все агрегаты регистра накопления"            
         },
         "ПерестроитьИспользованиеАгрегатов":{
            "name":"ПерестроитьИспользованиеАгрегатов",
            "name_en":"RebuildAggregatesUsing",
            "description":"Перестраивает использование агрегатов. Старая сеть перестраивается, если она больше чем <МаксимальныйОтносительныйРазмер>, или удалось построить сеть с эффективностью большей как минимум на <МинимальныйЭффект>.",
            "returns":"Булево, Истина - сеть изменилась, Ложь - в противном случае. ",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(МаксимальныйОтносительныйРазмер?, МинимальныйЭффект?) : Булево",
                  "Параметры":{
                     "МаксимальныйОтносительныйРазмер":"Число, Максимальная сумма размеров агрегатов в % от таблицы движений. Если не указан или равен нулю, то нет ограничения размера агрегатов.",
                     "МинимальныйЭффект":"Число, Процент, на который необходимо увеличить эффект старой сети при перестроении, если новая сеть увеличивает эффект на <Минимальный эффект>%, то метод реально перестраивает сеть. Если не указан или равен нулю, то нет требований к эффекту."                     
                  }
               }              
            }
         },
         "ПересчитатьИтоги":{
            "name":"ПересчитатьИтоги",
            "name_en":"RecalcTotals",
            "description":"Выполняет полный пересчет итогов регистра накопления."
         },
         "ПересчитатьИтогиЗаПериод":{
            "name":"ПересчитатьИтогиЗаПериод",
            "name_en":"RecalcTotalsForPeriod",
            "description":"Выполняет пересчет итогов регистра накопления за период.",            
            "signature":{
               "default":{
                  "СтрокаПараметров":"(НачалоПериода?, КонецПериода?)",
                  "Параметры":{
                     "НачалоПериода":"Дата, Начало периода пересчета. Если параметр не задан, то пересчет выполняется с самого начала.",
                     "КонецПериода":"Дата, Конец периода пересчета. Если параметр не задан, то пересчет выполняется до самого конца."
                  }
               }              
            }
         },
         "ПересчитатьТекущиеИтоги":{
            "name":"ПересчитатьТекущиеИтоги",
            "name_en":"RecalcPresentTotals",
            "description":"Выполняет пересчет текущих итогов регистра накопления."
         },
         "ПолучитьАгрегаты":{
            "name":"ПолучитьАгрегаты",
            "name_en":"GetAgregates",
            "description":"Получает полный список агрегатов регистра.",
            "returns":"ИнформацияОбАгрегатах"
         },
         "ПолучитьИспользованиеИтогов":{
            "name":"ПолучитьИспользованиеИтогов",
            "name_en":"GetTotalsUsing",
            "description":"Получает признак использования итогов. Если использование итогов отключено, то при записи набора записей регистра не будет производиться пересчет итогов, но при этом будут не доступны виртуальные таблицы расчета остатков и оборотов. Данный режим работы регистра позволяет повысить скорость записи набора записей регистра. Он может быть полезен при массовых загрузках данных.",
            "returns":"Булево"
         },
         "ПолучитьИспользованиеТекущихИтогов":{
            "name":"ПолучитьИспользованиеТекущихИтогов",
            "name_en":"GetPresentTotalsUsing",
            "description":"Получает флаг использования текущих итогов.",
            "returns":"Булево"
         },
         "ПолучитьМакет":{
            "name":"ПолучитьМакет",
            "name_en":"GetTemplate",
            "description":"Получает макет регистра накопления.",
            "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Макет) : Объект",
                  "Параметры":{
                     "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                  }
               }
            }
         },
         "ПолучитьПериодРассчитанныхИтогов":{
            "name":"ПолучитьПериодРассчитанныхИтогов",
            "name_en":"ПолучитьПериодРассчитанныхИтогов",
            "description":"Получает период рассчитанных итогов.",
            "returns":"Дата"
         },
         "ПолучитьРежимАгрегатов":{
            "name":"ПолучитьРежимАгрегатов",
            "name_en":"GetAggregatesMode",
            "description":"Получить режим использования агрегатов.",
            "returns":"Булево, Истина - регистр находится в режиме агрегатов."
         },
         "ПолучитьРежимРазделенияИтогов":{
            "name":"ПолучитьРежимРазделенияИтогов",
            "name_en":"GetTotalsSplittingMode",
            "description":"Получает флаг включенности механизма разделителя итогов.",
            "returns":"Булево"
         },
         "ПолучитьФорму":{
            "name":"ПолучитьФорму",
            "name_en":"GetForm",
            "description":"Получает форму регистра накопления.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },                  
         "ПолучитьФормуСписка":{
            "name":"ПолучитьФормуСписка",
            "name_en":"GetListForm",
            "description":"Получает форму списка регистра накопления.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "СоздатьКлючЗаписи":{
            "name":"СоздатьКлючЗаписи",
            "name_en":"CreateRecordKey",
            "description":"Создает ключ записи по переданной структуре.",
            "returns":"РегистрНакопленияКлючЗаписи",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(ЗначенияКлюча) : РегистрНакопленияКлючЗаписи",
                  "Параметры":{
                     "ЗначенияКлюча":"Структура, содержащая значения для заполнения свойств ключа записи. Идентификаторы элементов структуры должны соответствовать идентификаторам ключевых полей."
                  }
               }
            }
         },
         "СоздатьНаборЗаписей":{
            "name":"СоздатьНаборЗаписей",
            "name_en":"CreateRecordSet",
            "description":"Создает набор записей регистра накопления.",
            "returns":"РегистрНакопленияНаборЗаписей"
         },
         "УстановитьИспользованиеАгрегатов":{
            "name":"УстановитьИспользованиеАгрегатов",
            "name_en":"SetAggregatesUsing",
            "description":"Устанавливает использование агрегатов. Заполнение агрегатов можно выполнить при помощи метода ОбновитьАгрегаты.",            
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Использование)",
                  "Параметры":{
                     "Использование":"Булево, Режим использования агрегатов. Истина – использование агрегатов разрешается. Ложь – все агрегаты перестают использоваться и очищаются."
                  }
               }
            }
         },
         "УстановитьИспользованиеИтогов":{
            "name":"УстановитьИспользованиеИтогов",
            "name_en":"SetTotalsUsing",
            "description":"Устанавливает признак использования итогов. Если использование итогов отключено, то при записи набора записей регистра не будет производиться пересчет итогов, но при этом будут не доступны виртуальные таблицы расчета остатков и оборотов. Данный режим работы регистра позволяет повысить скорость записи набора записей регистра. Он может быть полезен при массовых загрузках данных. При установке признака использования итогов производится пересчет всех итогов.",            
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Признак)",
                  "Параметры":{
                     "Признак":"Булево, Признак использования итогов."
                  }
               }
            }
         },
         "УстановитьИспользованиеТекущихИтогов":{
            "name":"УстановитьИспользованиеТекущихИтогов",
            "name_en":"SetTotalsUsing",
            "description":"Устанавливает флаг использования текущих итогов.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Флаг)",
                  "Параметры":{
                     "Флаг":"Булево, Значение флага использования актуальных итогов."
                  }
               }
            }
         },
         "УстановитьПериодРассчитанныхИтогов":{
            "name":"УстановитьПериодРассчитанныхИтогов",
            "name_en":"SetTotalsPeriod",
            "description":"Устанавливает период, на который рассчитаны итоги. Влияет только на производительность получения остатков по данному регистру. Периодичность расчета - месяц. Период устанавливается на начало месяца. В параметре указывается конец периода по который должны быть рассчитаны итоги. Если указана дата 31.01.2000 то это значит что будут рассчитаны итоги на 01.02.2000. Для получения итогов после этой даты будут использоваться актуальные итоги.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Период)",
                  "Параметры":{
                     "Период":"Дата, Период, на который необходимо рассчитать итоги."
                  }
               }
            }
         },
         "УстановитьРежимАгрегатов":{
            "name":"УстановитьРежимАгрегатов",
            "name_en":"SetTotalsPeriod",
            "description":"Устанавливает режим использования агрегатов. Если в составе конфигурации для регистра нет агрегатов, метод вызывает исключение. При включении режима агрегатов итоги очищаются. При выключении режима агрегатов очищаются агрегаты, а итоги пересчитываются",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(РежимАгрегатов)",
                  "Параметры":{
                     "РежимАгрегатов":"Булево, Истина - вместо итогов используются агрегаты. Ложь - используются итоги (режим соответствует поведению регистра накопления версии 1С:Предприятие 8.1)."
                  }
               }
            }
         },
         "УстановитьРежимРазделенияИтогов":{
            "name":"УстановитьРежимРазделенияИтогов",
            "name_en":"SetTotalsSplittingMode",
            "description":"Устанавливает флаг использования механизма разделителя итогов",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Флаг)",
                  "Параметры":{
                     "Флаг":"Булево, Значение флага использования разделителя итогов. Если флаг установлен в значение Истина, то будет задействован механизм разделения итогов, который обеспечивает более высокую параллельность работы при записи в регистр. Система при одновременной записи движений несколькими сеансами не будет обновлять одни и те же записи итогов, а будет записывать изменения итогов в отдельные записи. При получении итогов эти данные складываются. Таким образом, обеспечивается и поддержание в актуальном состоянии итогов (например, для быстрого получения отчетов) и параллельность записи движений. Этот режим требует дополнительных расходов ресурсов (например, увеличивается количество данных в итоговых таблицах). Записи будут 'размножаться' только при параллельно выполняемых транзакциях. Их количество по каждой комбинации измерений будет зависеть от максимального количества одновременно выполняемых транзакций. При пересчете итогов накопленные отдельные записи сворачиваются."
                  }
               }
            }
         }
      },
      "objMethods":{
      	"Выгрузить":{
            "name":"Выгрузить",
            "name_en":"Unload",
            "description":"Создает таблицу значений и копирует в нее записи набора. Структура полученной таблицы совпадает со структурой набора ",
            "returns":"ТаблицаЗначений",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Строки?, Колонки?): ТаблицаЗначений",
                  "Параметры":{
                     "Строки":"Массив строк для выгрузки. Если не указан, выгружаются все строки набора записей. ",
                     "Колонки":"Строка, Список колонок для выгрузки в формате: 'Колонка1, Колонка2...'. Если список не задан, то будут выгружены все колонки."
                  }
               }               
            }
         },
         "Загрузить":{
            "name":"Загрузить",
            "name_en":"Load",
            "description":"Загружает набор записей значениями из переданной таблицы значений. При этом все прежние записи набора удаляются. Заполняются значения доступных для записи свойств записей регистра накопления, имена которых совпали c именами колонок таблицы значений.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(ТаблицаЗначений)",
                  "Параметры":{
                     "ТаблицаЗначений":"Таблица значений, содержащая данные для заполнения набора записей."
                  }
               }               
            }
         },
         "Записать":{
            "name":"Записать",
            "name_en":"Write",
            "description":"Записывает в базу данных набор записей регистра накопления. В зависимости от переданного параметра может быть выполнено добавление записей или их замещение.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Замещать?)",
                  "Параметры":{
                     "Замещать":"Булево, Определяет режим замещения существующей записи в соответствии с текущими установками отбора. Истина - перед записью существующие записи будут удалены. Ложь - записи будут дописаны к уже существующим в информационной базе записям."
                  }
               }               
            }
         },         
         "Прочитать":{
            "name":"Прочитать",
            "name_en":"Read",
            "description":"Считывает записи из базы данных по установленному отбору."
         },
         "Удалить":{
            "name":"Удалить",
            "name_en":"Delete",
            "description":"Удаляет запись из набора по указанному индексу записи или объекту записи регистра накопления.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Запись)",
                  "Параметры":{
                     "Запись":" Число/РегистрНакопленияЗапись, Индекс удаляемой записи либо сама запись. ."
                  }
               }               
            }
         }
      }
   },
   "accountRegs":{
      "name":"РегистрыБухгалтерии",
      "name_en":"AccountingRegisters",
      "items":{
         "ТестовыйЭлемент":{
            "properties":{
               "Реквизит1":"Реквизит №1",
               "Реквизит2":"Реквизит №2",
               "Реквизит3":"Реквизит №3"
            }
         }
      },
      "methods":{         
         "Выбрать":{
            "name":"Выбрать",
            "name_en":"Select",
            "description":"Формирует выборку записей регистра бухгалтерии. Если какая-либо граница интервала не задана, то по данной границе интервала выборка не ограничена.",
            "returns":"РегистрБухгалтерииВыборка",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(НачалоИнтервала?, КонецИнтервала?, Отбор?, Порядок?) : РегистрБухгалтерииВыборка",
                  "Параметры":{
                     "НачалоИнтервала":"Дата/МоментВремени/Граница, Определяет начало интервала для выборки записей регистра.",
                     "КонецИнтервала":"Определяет конец интервала для выборки записей регистра. ",
                     "Отбор":"Структура, Задает поле и значение отбора открываемой выборки. Ключ структуры описывает имя поля, а значение структуры - значение отбора по этому полю. В качестве полей для отбора могут задаваться измерения или реквизиты, для которых в конфигураторе признак индексирования установлен в значение 'Индексировать' или установлен признак 'Ведущее'. Вид сравнения может быть только Равно. Структура дополнительно может иметь элементы, соответствующие разделителям регистра с уровнем разделения НезависимоИСовместно, в состав которых входит регистр. Если такой элемент структуры задан для используемого в сеансе разделителя, значение для этого элемента должно совпадать со значением разделителя, иначе будет вызвано исключение. Если параметр не указан, то отбор не используется. Важно! Структура может содержать только один элемент.",
                     "Порядок":"Строка, Может содержать слово 'Возр' или 'Убыв', тогда стандартный порядок будет использоваться с указанным направлением.  Может содержать имя поля (реквизита или измерения, для которых указано индексирование) и слово 'Возр' или 'Убыв', тогда упорядочивание будет производится по указанному полю в указанном порядке."
                  }
               }
            }
         },
         "ВыбратьПоРегистратору":{
            "name":"ВыбратьПоРегистратору",
            "name_en":"SelectByRecorder",
            "description":"Формирует выборку по регистратору записей регистра бухгалтерии.",
            "returns":"РегистрБухгалтерииВыборка",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Регистратор) : РегистрБухгалтерииВыборка",
                  "Параметры":{
                     "Регистратор":"ДокументСсылка, Ссылка на документ, являющийся регистратором для записей"                     
                  }
               }
            }
         },         
         "Обороты":{
            "name":"Обороты",
            "name_en":"Turnovers",
            "description":"Получает обороты регистра накопления за заданный период времени. Есть возможность фильтрации по значениям измерений. Возвращает таблицу значений, содержащую колонки с измерениями, указанными в параметре Измерения, и по две колонки на каждый ресурс, указанный в параметре <Ресурсы>. Названия колонок для ресурсов формируются следующим образом: для регистров остатков: '<Имя ресурса>Приход' и '<Имя ресурса>Расход' или '<ИдентификаторРесурса>Receipt' и '<ИдентификаторРесурса>Expense'; для регистров оборотов: '<Имя ресурса>'.",
            "returns":"ТаблицаЗначений",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(НачалоПериода?, КонецПериода?, ВидыСубконто?, ВидыКорСубконто?, Отбор?, Измерения?, Ресурсы?) : ТаблицаЗначений",
                  "Параметры":{
                     "НачалоПериода":"Дата/МоментВремени/Граница, Момент времени, начиная с которого необходимо получить обороты. Если параметр не указан, то обороты будут получены начиная с момента ведения базы данных. Если в качестве параметра передана Дата или МоментВремени, то обороты за указанную дату (момент времени) будут включены в результирующую таблицу значений.",
                     "КонецПериода":"Дата/МоментВремени/Граница, Момент времени, определяющий конец периода за который необходимо получить обороты. Если параметр не указан, то обороты будут получены до самого позднего движения регистра. Если в качестве параметра передана Дата или МоментВремени, то обороты за указанную дату (момент времени) будут включены в результирующую таблицу значений.",
                     "ВидыСубконто":"ПланВидовХарактеристикСсылка/Массив/ФиксированныйМассив, Передается ссылка, или массив ссылок, или фиксированный массив ссылок на виды субконто. Виды субконто определяют, какие значения субконто будут доступны по именам 'Субконто1', 'Субконто2' и т.д. Кроме того, обороты будут посчитаны только по счетам, имеющим заданные виды субконто. Если виды субконто не заданы, то обращение к значениям субконто осуществляется по порядку (индексу), как они определены на соответствующем счете. Параметр не существует, если при конфигурировании для плана счетов не указаны субконто.",
                     "ВидыКорСубконто":"ПланВидовХарактеристикСсылка/Массив/ФиксированныйМассив, Передается ссылка, или массив ссылок, или фиксированный массив ссылок на виды субконто. Виды кор. субконто определяют, какие значения корреспондирующих субконто будут доступны по именам 'КорСубконто1', 'КорСубконто2' и т.д. Кроме того, обороты будут посчитаны только по кор. счетам, имеющим заданные виды кор. субконто. Если виды кор. субконто не заданы, то обращение к значениям кор. субконто осуществляется по порядку (индексу), как они определены на соответствующем счете.Важно! Имеет смысл только для регистра бухгалтерии с поддержкой корреспонденцией. Для регистра без корреспонденции параметр не существует! Параметр не существует, если при конфигурировании для плана счетов не указаны субконто.",
                     "Отбор":"Структура, Структура, содержащая набор значений измерений регистра, по которым надо отбирать обороты. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Если параметр не указан, то отбор не используется.",
                     "Измерения":"Строка, Список измерений, для которых надо разворачивать обороты. Строка, содержащая имена измерений, разделенные запятыми. Если параметр не указан или указана пустая строка, то обороты будут сформированы по всем измерениям.",
                     "Ресурсы":"Строка, Список ресурсов, для которых надо получить обороты. Строка, содержащая имена ресурсов, разделенные запятыми. Если параметр не указан или указана пустая строка, то обороты будут сформированы по всем ресурсам."
                  }
               }              
            }
         },
         "ОборотыДтКт":{
            "name":"ОборотыДтКт",
            "name_en":"DrCrTurnovers",
            "description":"Получает обороты по регистру бухгалтерии на заданный момент. Обороты получаются в разрезе заданных измерений и по заданным ресурсам. В измерения входят счет дебета, субконто дебета, счет кредита, субконто кредита, измерения кредита, измерения (для балансовых) и измерения дебета, измерения кредита (для не балансовых).",
            "returns":"ТаблицаЗначений",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(НачалоПериода?, КонецПериода?, ВидыСубконтоДт?, ВидыСубконтоКт?, Отбор?, Измерения?, Ресурсы?) : ТаблицаЗначений",
                  "Параметры":{
                     "НачалоПериода":"Дата/МоментВремени/Граница, Момент времени, начиная с которого необходимо получить обороты. Если параметр не указан, то обороты будут получены начиная с момента ведения базы данных. Если в качестве параметра передана Дата или МоментВремени, то обороты за указанную дату (момент времени) будут включены в результирующую таблицу значений.",
                     "КонецПериода":"Дата/МоментВремени/Граница, Момент времени, определяющий конец периода за который необходимо получить обороты. Если параметр не указан, то обороты будут получены до самого позднего движения регистра. Если в качестве параметра передана Дата или МоментВремени, то обороты за указанную дату (момент времени) будут включены в результирующую таблицу значений.",
                     "ВидыСубконтоДт":"ПланВидовХарактеристикСсылка/Массив/ФиксированныйМассив, Передается ссылка, или массив ссылок, или фиксированный массив ссылок на виды субконто. Виды субконто определяют, какие значения субконто будут доступны по именам 'СубконтоДт1', 'СубконтоДт2' и т.д. Кроме того, обороты будут посчитаны только по счетам, имеющим заданные виды субконто. Если виды субконто не заданы, то обращение к значениям субконто осуществляется по порядку (индексу), как они определены на соответствующем счете. Параметр не существует, если при конфигурировании для плана счетов не указаны субконто.",
                     "ВидыСубконтоКт":"ПланВидовХарактеристикСсылка/Массив/ФиксированныйМассив, Передается ссылка, или массив ссылок, или фиксированный массив ссылок на виды субконто. Виды субконто определяют, какие значения субконто будут доступны по именам 'СубконтоКт1', 'СубконтоКт2' и т.д. Кроме того, обороты будут посчитаны только по счетам, имеющим заданные виды субконто. Если виды субконто не заданы, то обращение к значениям субконто осуществляется по порядку (индексу), как они определены на соответствующем счете. Параметр не существует, если при конфигурировании для плана счетов не указаны субконто.",
                     "Отбор":"Структура, Структура, содержащая набор значений измерений регистра, по которым надо отбирать обороты. Имя ключа структуры должно совпадать с именем измерения регистра, заданного в конфигураторе, а значение элемента структуры - задает отбираемое по данному измерению значение. Если параметр не указан, то отбор не используется.",
                     "Измерения":"Строка, Список измерений, для которых надо разворачивать обороты. Строка, содержащая имена измерений, разделенные запятыми. Если параметр не указан или указана пустая строка, то обороты будут сформированы по всем измерениям.",
                     "Ресурсы":"Строка, Список ресурсов, для которых надо получить обороты. Строка, содержащая имена ресурсов, разделенные запятыми. Если параметр не указан или указана пустая строка, то обороты будут сформированы по всем ресурсам."
                  }
               }              
            }
         },         
         "Остатки":{
            "name":"Остатки",
            "name_en":"Balance",
            "description":"Получает остатки по регистру бухгалтерии на заданный момент. Остатки получаются в разрезе заданных измерений и по заданным ресурсам. В измерения входят счет и субконто, зависящие от счета. Если параметр <ВидыСубконто> не задан, то обращение к субконто осуществляется по индексу в том порядке, как виды субконто определены на соответствующем счете. Если параметр <ВидыСубконто> задан, то остатки будут считаться только по счетам, у которых определены заданные виды субконто, обращение к значениям субконто осуществляется в порядке, заданном параметром <ВидыСубконто>.",
            "returns":"ТаблицаЗначений",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(МоментВремени?, ВидыСубконто?, Отбор?, Измерения?, Ресурсы?) : ТаблицаЗначений",
                  "Параметры":{
                     "МоментВремени":"Дата/МоментВремени/Граница, Момент времени, на который необходимо получить остатки. Если параметр не указан, то будут получены текущие остатки (на максимальную дату движений регистра). Если в качестве параметра передана Дата, то остатки будут получены на начало дня, если МоментВремени - то в остатках не будут учтены движения регистра, произошедшие в тот же момент времени.",
                     "ВидыСубконто":"ПланВидовХарактеристикСсылка/Массив/ФиксированныйМассив, Передается ссылка, или массив ссылок, или фиксированный массив ссылок на виды субконто. Виды субконто определяют, какие значения субконто будут доступны по именам 'Субконто1', 'Субконто2' и т.д. Кроме того, остатки будут посчитаны только по счетам, имеющим заданные виды субконто. Если виды субконто не заданы, то обращение к значениям субконто осуществляется по порядку (индексу), как они определены на соответствующем счете.Параметр не существует, если при конфигурировании для плана счетов не указаны субконто.",
                     "Отбор":"Структура, содержащая набор значений измерений регистра, по которым надо отбирать итоги. Допустимые значения ключа: Счет, Субконто<Номер>, <Имя измерения>. Если параметр не указан, то отбор не используется. ",
                     "Измерения":"Строка/Неопределено, Список измерений, для которых надо получить остатки. Строка, содержащая имена измерений, разделенные запятыми. Допустимые имена измерений: Счет, Субконто<Номер>, <Имя измерения>. Если параметр не указан или указано Неопределено, то остатки будут сформированы по всем измерениям.",
                     "Ресурсы":"Строка/Неопределено, Список ресурсов, для которых надо получить остатки. Строка, содержащая имена ресурсов, разделенные запятыми. Если параметр не указан или указано Неопределено, то остатки будут сформированы по всем ресурсам"
                  }
               }              
            }
         },         
         "ПересчитатьИтоги":{
            "name":"ПересчитатьИтоги",
            "name_en":"RecalcTotals",
            "description":"Выполняет полный пересчет итогов регистра бухгалтерии."
         },
         "ПересчитатьИтогиЗаПериод":{
            "name":"ПересчитатьИтогиЗаПериод",
            "name_en":"RecalcTotalsForPeriod",
            "description":"Выполняет полный пересчет итогов регистра бухгалтерии.",            
            "signature":{
               "default":{
                  "СтрокаПараметров":"(НачалоПериода?, КонецПериода?)",
                  "Параметры":{
                     "НачалоПериода":"Дата, Начало периода пересчета. Если параметр не задан, то пересчет выполняется с самого начала.",
                     "КонецПериода":"Дата, Конец периода пересчета. Если параметр не задан, то пересчет выполняется до самого конца."
                  }
               }              
            }
         },
         "ПересчитатьТекущиеИтоги":{
            "name":"ПересчитатьТекущиеИтоги",
            "name_en":"RecalcPresentTotals",
            "description":"Выполняет пересчет текущих итогов регистра бухгалтерии."
         },         
         "ПолучитьИспользованиеИтогов":{
            "name":"ПолучитьИспользованиеИтогов",
            "name_en":"GetTotalsUsing",
            "description":"Получает признак использования итогов. Если использование итогов отключено, то при записи набора записей регистра не будет производиться пересчет итогов, но при этом будут не доступны виртуальные таблицы расчета остатков и оборотов. Данный режим работы регистра позволяет повысить скорость записи набора записей регистра. Он может быть полезен при массовых загрузках данных.",
            "returns":"Булево"
         },
         "ПолучитьИспользованиеТекущихИтогов":{
            "name":"ПолучитьИспользованиеТекущихИтогов",
            "name_en":"GetPresentTotalsUsing",
            "description":"Получает флаг использования текущих итогов.",
            "returns":"Булево"
         },
         "ПолучитьМакет":{
            "name":"ПолучитьМакет",
            "name_en":"GetTemplate",
            "description":"Получает макет регистра бухгалтерии.",
            "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Макет) : Объект",
                  "Параметры":{
                     "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                  }
               }
            }
         },
         "ПолучитьПериодРассчитанныхИтогов":{
            "name":"ПолучитьПериодРассчитанныхИтогов",
            "name_en":"ПолучитьПериодРассчитанныхИтогов",
            "description":"Получает период рассчитанных итогов.",
            "returns":"Дата"
         },         
         "ПолучитьРежимРазделенияИтогов":{
            "name":"ПолучитьРежимРазделенияИтогов",
            "name_en":"GetTotalsSplittingMode",
            "description":"Получает флаг включенности механизма разделителя итогов.",
            "returns":"Булево"
         },
         "ПолучитьФорму":{
            "name":"ПолучитьФорму",
            "name_en":"GetForm",
            "description":"Получает форму регистра бухгалтерии.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },                  
         "ПолучитьФормуСписка":{
            "name":"ПолучитьФормуСписка",
            "name_en":"GetListForm",
            "description":"Получает форму списка регистра бухгалтерии.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма?, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы. Если параметр не указан, то используется основная форма, заданная в конфигураторе.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "СоздатьКлючЗаписи":{
            "name":"СоздатьКлючЗаписи",
            "name_en":"CreateRecordKey",
            "description":"Создает ключ записи по переданной структуре.",
            "returns":"РегистрБухгалтерииКлючЗаписи",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(ЗначенияКлюча) : РегистрБухгалтерииКлючЗаписи",
                  "Параметры":{
                     "ЗначенияКлюча":"Структура, содержащая значения для заполнения свойств ключа записи. Идентификаторы элементов структуры должны соответствовать идентификаторам ключевых полей."
                  }
               }
            }
         },
         "СоздатьНаборЗаписей":{
            "name":"СоздатьНаборЗаписей",
            "name_en":"CreateRecordSet",
            "description":"Создает набор записей регистра бухгалтерии.",
            "returns":"РегистрБухгалтерииНаборЗаписей"
         },         
         "УстановитьИспользованиеИтогов":{
            "name":"УстановитьИспользованиеИтогов",
            "name_en":"SetTotalsUsing",
            "description":"Устанавливает признак использования итогов. Если использование итогов отключено, то при записи набора записей регистра не будет производиться пересчет итогов, но при этом будут не доступны виртуальные таблицы расчета остатков и оборотов. Данный режим работы регистра позволяет повысить скорость записи набора записей регистра. Он может быть полезен при массовых загрузках данных. При установке признака использования итогов производится пересчет всех итогов.",            
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Признак)",
                  "Параметры":{
                     "Признак":"Булево, Признак использования итогов."
                  }
               }
            }
         },
         "УстановитьИспользованиеТекущихИтогов":{
            "name":"УстановитьИспользованиеТекущихИтогов",
            "name_en":"SetTotalsUsing",
            "description":"Устанавливает флаг использования текущих итогов.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Флаг)",
                  "Параметры":{
                     "Флаг":"Булево, Значение флага использования актуальных итогов."
                  }
               }
            }
         },
         "УстановитьПериодРассчитанныхИтогов":{
            "name":"УстановитьПериодРассчитанныхИтогов",
            "name_en":"SetTotalsPeriod",
            "description":"Устанавливает период, на который рассчитаны итоги. Влияет только на производительность получения остатков по данному регистру. Периодичность расчета - месяц. Период устанавливается на начало месяца. В параметре указывается конец периода по который должны быть рассчитаны итоги. Если указана дата 31.01.2000 то это значит что будут рассчитаны итоги на 01.02.2000. Для получения итогов после этой даты будут использоваться актуальные итоги.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Период)",
                  "Параметры":{
                     "Период":"Дата, Период, на который необходимо рассчитать итоги."
                  }
               }
            }
         },         
         "УстановитьРежимРазделенияИтогов":{
            "name":"УстановитьРежимРазделенияИтогов",
            "name_en":"SetTotalsSplittingMode",
            "description":"Устанавливает флаг использования механизма разделителя итогов",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Флаг)",
                  "Параметры":{
                     "Флаг":"Булево, Значение флага использования разделителя итогов. Если флаг установлен в значение Истина, то будет задействован механизм разделения итогов, который обеспечивает более высокую параллельность работы при записи в регистр. Система при одновременной записи движений несколькими сеансами не будет обновлять одни и те же записи итогов, а будет записывать изменения итогов в отдельные записи. При получении итогов эти данные складываются. Таким образом, обеспечивается и поддержание в актуальном состоянии итогов (например, для быстрого получения отчетов) и параллельность записи движений. Этот режим требует дополнительных расходов ресурсов (например, увеличивается количество данных в итоговых таблицах). Записи будут 'размножаться' только при параллельно выполняемых транзакциях. Их количество по каждой комбинации измерений будет зависеть от максимального количества одновременно выполняемых транзакций. При пересчете итогов накопленные отдельные записи сворачиваются."
                  }
               }
            }
         }
      },
      "objMethods":{
      	"Выгрузить":{
            "name":"Выгрузить",
            "name_en":"Unload",
            "description":"Создает таблицу значений и копирует в нее записи набора. Структура полученной таблицы совпадает со структурой набора записей. Значения субконто выгружаются вместе с видами субконто. Для каждого субконто создается пара колонок с идентификаторами вида ВидСубконто<Номер>, Субконто<Номер>, для регистра не поддерживающего корреспонденцию, и ВидСубконтоДт<Номер>, СубконтоДт<Номер>, ВидСубконтоКт<Номер>, СубконтоКт<Номер>, для регистра поддерживающего корреспонденцию. При этом номера <Номер> могут не совпадать с номерами видов субконто на соответствующем счете.",
            "returns":"ТаблицаЗначений",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Строки?, Колонки?): ТаблицаЗначений",
                  "Параметры":{
                     "Строки":"Массив строк для выгрузки. Если не указан, выгружаются все строки набора записей. ",
                     "Колонки":"Строка, Список колонок для выгрузки в формате: 'Колонка1, Колонка2...'. Если список не задан, то будут выгружены все колонки."
                  }
               }               
            }
         },
         "Загрузить":{
            "name":"Загрузить",
            "name_en":"Load",
            "description":"Загружает набор записей значениями из переданной таблицы значений. При этом все прежние записи набора удаляются. Заполняются значения доступных для записи свойств записей регистра бухгалтерии, имена которых совпали c именами колонок таблицы значений. Для каждого субконто создается пара колонок с идентификаторами вида ВидСубконто<Номер>, Субконто<Номер>, для регистра не поддерживающего корреспонденцию, и ВидСубконтоДт<Номер>, СубконтоДт<Номер>, ВидСубконтоКт<Номер>, СубконтоКт<Номер>, для регистра поддерживающего корреспонденцию. При этом номера <Номер> могут не совпадать с номерами видов субконто на соответствующем счете.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(ТаблицаЗначений)",
                  "Параметры":{
                     "ТаблицаЗначений":"Таблица значений, содержащая данные для заполнения набора записей."
                  }
               }               
            }
         },
         "Записать":{
            "name":"Записать",
            "name_en":"Write",
            "description":"Записывает в базу данных набор записей регистра бухгалтерии. В зависимости от переданного параметра может быть выполнено добавление записей или их замещение.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Замещать?)",
                  "Параметры":{
                     "Замещать":"Булево, Определяет режим замещения существующей записи в соответствии с текущими установками отбора. Истина - перед записью существующие записи будут удалены. Ложь - записи будут дописаны к уже существующим в информационной базе записям."
                  }
               }               
            }
         },         
         "Прочитать":{
            "name":"Прочитать",
            "name_en":"Read",
            "description":"Считывает записи из базы данных по установленному отбору."
         },
         "Удалить":{
            "name":"Удалить",
            "name_en":"Delete",
            "description":"Удаляет запись из набора по указанному индексу записи или объекту записи регистра накопления.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Запись)",
                  "Параметры":{
                     "Запись":" Число/РегистрБухгалтерииЗапись, Индекс удаляемой записи либо сама запись. ."
                  }
               }               
            }
         }
      }
   },
   "dataProc":{
      "name":"Обработки",
      "name_en":"DataProcessors",
      "items":{
         "ТестовыйЭлемент":{
            "properties":{
               "Реквизит1":"Реквизит №1",
               "Реквизит2":"Реквизит №2",
               "Реквизит3":"Реквизит №3"
            }
         }
      },
      "methods":{
         "ПолучитьМакет":{
            "name":"ПолучитьМакет",
            "name_en":"GetTemplate",
            "description":"Получает макет обработки.",
            "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Макет) : Объект",
                  "Параметры":{
                     "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                  }
               }
            }
         },         
         "ПолучитьФорму":{
            "name":"ПолучитьФорму",
            "name_en":"GetForm",
            "description":"Получает форму обработки.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "Создать":{
            "name":"Создать",
            "name_en":"Create",
            "description":"Создает новый экземпляр обработки.",
            "returns":"ОбработкаОбъект"            
         }
      }
   },
   "reports":{
      "name":"Отчеты",
      "name_en":"Reports",
      "items":{
         "ТестовыйЭлемент":{
            "properties":{
               "Реквизит1":"Реквизит №1",
               "Реквизит2":"Реквизит №2",
               "Реквизит3":"Реквизит №3"
            }
         }
      },
      "methods":{
         "ПолучитьМакет":{
            "name":"ПолучитьМакет",
            "name_en":"GetTemplate",
            "description":"Получает макет отчета.",
            "returns":"ТабличныйДокумент; ТекстовыйДокумент; другой объект, который может быть макетом.",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Макет) : Объект",
                  "Параметры":{
                     "Макет":"Имя макета, как оно задано в конфигураторе, или объект описания метаданного требуемого макета"
                  }
               }
            }
         },         
         "ПолучитьФорму":{
            "name":"ПолучитьФорму",
            "name_en":"GetForm",
            "description":"Получает форму отчета.",
            "returns":"Форма",
            "signature":{
               "default":{
                  "СтрокаПараметров":"(Форма, Владелец?, КлючУникальности?) : Форма",
                  "Параметры":{
                     "Форма":"Строка, Имя формы, как оно задано в конфигураторе, или объект описания метаданного требуемой формы.",
                     "Владелец":"Объект, который будет являться владельцем открываемой формы.",
                     "КлючУникальности":"В данном параметре может быть задан некоторый ключ, значение которого будет использоваться для поиска уже открытых форм. При поиске учитываются значения свойств открытых форм соответствующим значениям параметров метода. Если найдена открытая форма (по совпадению всех параметров), то она будет возвращена вместо новой формы."
                  }
               }
            }
         },
         "Создать":{
            "name":"Создать",
            "name_en":"Create",
            "description":"Создает новый экземпляр отчета.",
            "returns":"ОтчетОбъект"
         }
      }
   },
   "enums":{
      "name":"Перечисления",
      "name_en":"Enums",
      "items":{
         "ТестовыйЭлемент":{
            "properties":{
               "Реквизит1":"Реквизит №1",
               "Реквизит2":"Реквизит №2",
               "Реквизит3":"Реквизит №3"
            }
         }
      }      
   }
}